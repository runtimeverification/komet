name: 'Master Push'
on:
  push:
    branches:
      - master

jobs:

  release:
    name: 'Publish Release'
    runs-on: [self-hosted, linux, flyweight]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0
      - name: 'Make release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          VERSION=v$(cat package/version)
          gh release create ${VERSION} --target ${{ github.sha }}
  
  nix-cache:
    name: 'Populate Nix Cache'
    strategy:
      matrix:
        runner: [normal, ARM64]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0

      - name: 'Build and cache Komet'
        uses: workflow/nix-shell-action@v3
        env:
          GC_DONT_GC: 1
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_PUBLIC_TOKEN }}
        with:
          packages: jq
          script: |
            KOMET=$(nix build --extra-experimental-features 'nix-command flakes' .#komet --json | jq -r '.[].outputs | to_entries[].value')
            DRV=$(nix-store --query --deriver ${KOMET})
            nix-store --query --requisites --include-outputs ${DRV} | cachix push k-framework
    
  nix-binary-cache:
    name: 'Populate Nix Binary Cache'
    strategy:
      matrix:
        runner: [normal, ARM64]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v4

      - name: 'Publish Komet to k-framework-binary cache'
        uses: workflow/nix-shell-action@v3
        env:
          CACHIX_AUTH_TOKEN: '${{ secrets.CACHIX_PRIVATE_KFB_TOKEN }}'
          GC_DONT_GC: '1'
        with:
          packages: jq
          script: |
            export PATH="$(nix build github:runtimeverification/kup --no-link --json | jq -r '.[].outputs | to_entries[].value')/bin:$PATH"
            kup publish k-framework-binary .#komet --keep-days 180


